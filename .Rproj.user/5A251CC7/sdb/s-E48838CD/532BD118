{
    "collab_server" : "",
    "contents" : "# server.R\nbase <- readRDS(\"dados/dados_dfJSON.rds\")\nprecos <- readRDS(\"dados/precos_commodities.rds\")\ncapitais <- readRDS(\"dados/capitais_AL.rds\")\n\ntabela_por_pais <- base %>% filter(ptTitle == \"World\") %>%\n  group_by(rtTitle, rgDesc, yr) %>% summarise(Valor = round(sum(TradeValue)/10^9, digits = 1)) %>% ungroup() %>%\n  arrange(desc(Valor))\n\ntabela_por_merc <- base %>% \n  filter(ptTitle == \"World\") %>%\n  group_by(cmdCode, rgDesc, yr, rtTitle) %>% summarise(Mercadoria = first(cmdDescEPt),\n                                                       Valor = round(sum(TradeValue)/10^9, digits = 1)) %>%\n  arrange(desc(Valor))\n\n\nnames(precos)[3] <- 'preco'\n\nshinyServer(\n  function(input, output) {\n\n    output$titulo1 <- renderText(paste(\"Comercio exterior para os paises selecionados\\n\", input$tipo))\n    \n    output$graf1 <- renderPlotly({\n      tipo <- switch(input$tipo,\n                     \"Exportacao\" = '[2|3]',\n                     'Importacao' = '[1|4]',\n                     'Exportacao e Importacao' = '[1-4]')\n      \n      por_pais <- base %>% filter(grepl(x = rgCode, tipo), ptTitle == \"World\", yr == as.character(input$ano)) %>%\n        group_by(rtTitle) %>% summarise(Valor = round(sum(TradeValue)/10^9, digits = 1)) %>% ungroup() %>%\n        arrange(desc(Valor))\n      \n      graf.pais <- ggplot(data = por_pais[1:input$quant, ], aes(x = reorder(rtTitle, Valor), y = Valor)) +\n        geom_bar(stat = 'identity', fill = 'indianred', alpha = 0.9) +\n        geom_text(aes(label = format(x = Valor, decimal.mark = \",\")),\n                  hjust = 5.1, col = 'black', size = 6) +\n        guides(fill = 'none') +\n        theme_bw(base_size = 14) +\n        theme(axis.text.y = element_text(size = 9, face = 'bold', hjust = 1)) +\n        labs(x = '', y = \"Bilhoes de US$\", fill = '') #+\n      coord_flip()\n      ggplotly(p = graf.pais)\n    })\n    output$titulo2 <- renderText(paste(input$tipo,\"de\", input$pais, \"\\nem\", input$ano))\n    \n    output$graf2 <- renderPlotly({\n      tipo <- switch(input$tipo,\n                     'Exportacao' = '[2|3]',\n                     'Importacao' = '[1|4]',\n                     'Exportacao e Importacao' = '[1-4]')\n      \n      por_merc <- base %>% \n        filter(grepl(x = rgCode, tipo), ptTitle == \"World\", grepl(x = yr, input$ano), rtTitle == input$pais) %>%\n        group_by(cmdCode) %>% summarise(Mercadoria = first(cmdDescEPt),\n                                        Valor = round(sum(TradeValue)/10^9, digits = 1)) %>%\n        arrange(desc(Valor)) %>%\n        ungroup() %>% mutate(soma_acu = cumsum(Valor), percentual = soma_acu*100/sum(Valor))\n      \n      graf.merc <- ggplot(data = por_merc %>% filter(percentual <= input$qt_merc), aes(x = reorder(Mercadoria, Valor), y = Valor)) +\n        geom_bar(stat = 'identity', fill = 'indianred', alpha = 0.9) +\n        geom_text(aes(label = format(x = Valor, decimal.mark = \",\")),\n                  hjust = -4.1, col = 'black', size = 6) +\n        theme_bw(base_size = 15) +\n        labs(x = \"\", y = \"Volume de comercio, em bilhoes de US$\") +\n        coord_flip()\n      ggplotly(graf.merc)\n      \n    })\n    \n    output$titulo3 <- renderText(paste(\"Precos de \",paste(input$mercadoria, collapse = \" e \"), sep = \"\"))\n    output$graf3 <- renderPlotly({\n      precos.dim <- precos %>% filter(Mercadoria %in% input$mercadoria, \n                                      Ano >= input$periodo[1], Ano <= input$periodo[2])\n      graf.precos <- ggplot(precos.dim, aes(x = Ano, y = preco)) + \n        geom_line(data = precos.dim,\n                  aes(col = Mercadoria), alpha = 0.9) +\n        theme_bw() +\n        scale_fill_discrete()\n      \n      ggplotly(graf.precos)\n    })\n    \n    output$graf4 <- renderPlotly({\n      var = switch (input$capitais,\n                    \"Entrada liquida de capitais autonomos\" = \"(1) Net inflows of autonomous capital\",\n                    \"Entrada liquida de capitais nao-autonomos\" = \"(2) Net inflows of non-autonomous capital\",\n                    \"Total da entrada liquida de capital\" = \"(3) Total net inflows of capital = (1) + (2)\",\n                    \"Balanca de rendas\" = \"(4) Income balance\",\n                    \"Transferencias liquidas\" = \"(5) Net resource transfers = (3) + (4)\"\n      )\n      seletor <- capitais %>% filter(ano == max(ano)) %>% arrange(desc(valor)) %>% select(pais) %>% unique()\n      paises.capitais <- input$paises.capitais[1]:input$paises.capitais[2]      \n      \n      graf.capitais <- ggplot(data = capitais %>% filter(variavel == var,\n                                                         pais %in% seletor$pais[paises.capitais]),\n                              aes(x = ano , y = valor, col = reorder(pais, valor))) +\n        geom_point() + geom_smooth(alpha = 0.7, se = FALSE) +\n        theme_bw() +\n        scale_color_discrete() +\n        theme(legend.position = \"bottom\")\n      ggplotly(graf.capitais)\n    })\n     \n    output$download.graf1 <- downloadHandler(\n      filename = function() {\n        paste('data-', Sys.Date(), '.csv', sep='')\n      },\n      content = function(con) {\n        write.csv(tabela_por_pais, con)\n      }\n    )\n    output$download.graf2 <- downloadHandler(\n      filename = function() {\n        paste('data-', Sys.Date(), '.csv', sep='')\n      },\n      content = function(con) {\n        write.csv(tabela_por_merc, con)\n      }\n    )\n    output$download.graf3 <- downloadHandler(\n      filename = function() {\n        paste('data-', Sys.Date(), '.csv', sep='')\n      },\n      content = function(con) {\n        write.csv(precos, con)\n      }\n    )\n  }\n)",
    "created" : 1476726112077.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1159937029",
    "id" : "532BD118",
    "lastKnownWriteTime" : 1476712388,
    "last_content_update" : 1476712388,
    "path" : "C:/Users/tomas/Documents/Projetos/Painel-AL/shiny/server.R",
    "project_path" : "shiny/server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}